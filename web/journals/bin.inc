<?
##################################
# $Id$
# experiments in binary
# funny how little it takes.
?>

<H1>Php & Binary for Category Systems</H1>
<P><a href=\"". $PHP_SELF ."s\">source file is available</a>,<BR> 
<a href="./bin_converter.php">a base10 to binary display is also available.</A></P>

<?
echo <<<EOT
<P>This list of 8-bit binary numbers and their acompanying 
base10 values is generated by a for loop.  For the purpose of categories, consider this an unsigned integer giving us use of the Most Something Something.
</P>
EOT;
echo "<OL>";
$query="SELECT COUNT(cat_id) FROM categories";
$res=mysql_query($query);
$count=mysql_result($res,0,0);
$mcount=$count-1;
for ($i=0; $i<=$mcount;$i++) {
  $num = 1<<$i;
  $query = "SELECT name FROM categories WHERE level1=$num";
  $res = mysql_query($query);
  $name = @mysql_result($res,0,0);
  echo "<LI><TT> ". bin($mcount,$num)." is $num aka $name</TT>";
}
?>
</OL>


<H2>Bitwise Operations</H2>
<P>Comparing binary numbers against each other with bitwise operators is an efficient way of storing binary numbers with multiple toggles.</P>

<?
$numA=73812;
$numB=65536;
$res = $numA & $numB;
$res2 = $numA | $numB;
echo "<TT>";

echo "$numA & $numB is $res<BR>";
echo "$numA | $numB is $res2<BR>";
echo "\nA: ". bin(32,$numA) ."<BR>";
echo "\nB: ". bin(32,$numB) ."<BR>";
echo "\n1: ". bin(32,$res)  ."<BR>";
echo "\n2: ". bin(32,$res2) ."<BR>";
echo "</TT>";
?>

<H2>mysql support for bit fiddling</H2>

<P>from, "<A HREF="http://www.mysql.com/doc/G/r/Group_by_functions.html">6.3.6 Functions for Use with <CODE>GROUP BY</CODE> Clauses</A>."</P>

<P><DT><CODE>BIT_OR(expr)</CODE> <DD> Returns the bitwise <CODE>OR</CODE> of all bits in <CODE>expr</CODE>. The calculation is performed with 64-bit (<CODE>BIGINT</CODE>) precision.</P>

<P><DT><CODE>BIT_AND(expr)</CODE> <DD> Returns the bitwise <CODE>AND</CODE> of all bits in <CODE>expr</CODE>. The calculation is performed with 64-bit (<CODE>BIGINT</CODE>) precision. </DL></P>


<BLOCKQUOTE><B>NOTE:</B><I>The problem with depending on that is that most other databases don't support it so you're screwed if you ever migrate.</I><BR>--chris snafu</BLOCKQUOTE>


<H2>References</H2>
<P>Gene Myers, "<a href="http://www.cscene.org/CS9/CS9-02.html">Becoming Bit Wise</a>", C Scene.  1998. <BR>http://www.cscene.org/CS9/CS9-02.html
</P>
 
<P>MySQL AB, MySQL Documentation, "<A HREF="http://www.mysql.com/doc/G/r/Group_by_functions.html">6.3.6 Functions for Use with <CODE>GROUP BY</CODE> Clauses</A>," GNU license, 1995-2001.<BR>http://www.mysql.com/doc/G/r/Group_by_functions.html</P>
